---
- stat:
    path: /etc/yum.repos.d/redhat-rhui.repo
  register: rhui_repo

- block:
  - name: Install Open SCAP scanner
    yum:
      name: openscap-scanner
      state: present
      disablerepo: '*'
      enablerepo: rhel-{{ ansible_distribution_major_version }}-server-rpms

  - name: Install Open SCAP Security Guide
    yum:
      name: scap-security-guide
      state: present
      disablerepo: '*'
      enablerepo: rhel-{{ ansible_distribution_major_version }}-server-rpms
  when: rhui_repo.stat.isreg is undefined or rhui_repo.stat.isreg == False

- block:
  - name: Install Open SCAP scanner
    yum:
      name: openscap-scanner
      state: present
      disablerepo: '*'
      enablerepo: rhui-REGION-rhel-server-releases

  - name: Install Open SCAP Security Guide
    yum:
      name: scap-security-guide
      state: present
      disablerepo: '*'
      enablerepo: rhui-REGION-rhel-server-releases
  when: rhui_repo.stat.isreg is defined and rhui_repo.stat.isreg == True

- name: Ensure the Reports Directory Exists
  file:
    path: /tmp/scap_reports
    state: directory
    mode: 0700
    owner: root
    group: root

- name: Reload auditd for good measure
  shell: /sbin/augenrules --load

- set_fact:
    oscap_profiles: "{{ (oscap_profiles | default([])) + [oscap_profile_lookup[item]] }}"
  loop: "{{ oscap_profile_names | default([]) }}"

- name: Run an SCAP scan and Generate Report EL 7
  command: >
    /usr/bin/oscap xccdf eval
    --profile "{{ item }}"
    --results /tmp/scap_reports/{{ ansible_hostname }}-scan-xccdf-results-{{ item }}.xml
    --report /tmp/scap_reports/{{ ansible_hostname }}-scan-xccdf-report-{{ item }}.html
    /usr/share/xml/scap/ssg/content/ssg-rhel7-xccdf.xml
  failed_when: result | failed and result.rc == 1
  register: result
  loop: "{{ oscap_profiles }}"

- name: Fetch the SCAP Report
  fetch:
    src: /tmp/scap_reports/{{ ansible_hostname }}-scan-xccdf-results-{{ item }}.xml
    dest: "{{ ansible_hostname }}-scan-xccdf-results-{{ item }}.xml"
    flat: yes
  loop: "{{ oscap_profiles }}"
    
- name: Copy reports to AWS S3
  aws_s3:
    region: us-east-1
    bucket: oscap-reporting
    object: "{{ ansible_hostname }}-scan-xccdf-results-{{ item }}.xml"
    mode: put
    permission: public-read
    src: "{{ ansible_hostname }}-scan-xccdf-results-{{ item }}.xml"
    validate_certs: no
  register: report_upload
  loop: "{{ oscap_profiles }}"

- name: output URL of report
  set_fact:
    oscap_report_url: "{{ report_upload.url }}"
